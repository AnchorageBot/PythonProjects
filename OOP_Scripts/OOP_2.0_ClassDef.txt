# A class is similar to a blueprint in that it describes an object such as a house

# Instantiation is the process of creating an object from a class

class <ClassName>():

  def __init__(self,<optional Parameter 1>, ... <optional Parameter N>):
    # instantiation code

  def <function 1>(self, <optional Parameter 1>, ... <optional Parameter N>):
    # method (class function) code

  def <function N>(self, <optional Parameter 1>, ... <optional Parameter N>):
    # method (class function) code
    
# State - The data an object retains
# Behavior - Actions an object can do

# Method - function located inside of a class 

# Global scope variable - available anywhere in program
# Instance variable - has global scope (inside a class)
# Local scope variable - available only within a function, when the function ends the variable ceases to exist
# Method variable - has local scope (inside a function)

# Instance - object
# Object - data plus code that acts on the data over time
# Object - a single instance of a class that has its own set of all the data defined in the instance variables of a class
